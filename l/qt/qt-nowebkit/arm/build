#!/bin/bash

# arm/build
# Check package dependencies, set metadata and launch
# package build script.
# by Stuart Winter <mozes@slackware.com>
#
source /usr/share/slackdev/buildkit.sh

# https://buildd.debian.org/build.php?arch=armel&pkg=qt4-x11
#
# Apparently debian have had trouble with this, so let's make sure
# our architecture is always hard coded:
export LD_PRELOAD=/usr/lib/libfakeuname.so

#export FAKEUNAMEARCH=armv5tel
if [ "$ARCH" = "arm" ]; then
   export FAKEUNAMEARCH=armv7l
elif [ "$ARCH" = "aarch64" ]; then
   export FAKEUNAMEARCH=aarch64
fi

# Package metadata:
export PKGNAM=qt
export VERSION=4.8.7
export BUILD=2
#export BUILD=3_slack14.1
export PKGSERIES=l
export SLACKPACKAGE=$PKGNAM-$VERSION-$ARCH-$BUILD.txz

## ******************************************************************* ##
# For test packages - best to store in another location rather than
# overwriting the working copy in the main tree:
# export PKGSTORE=/tmp/
# mkdir -vpm755 $PKGSTORE/$PKGSERIES
## ******************************************************************* ##

# Reset the ARM file system: restore it to the 'factory settings'
# as it were (this has no effect when building natively):
sboxsysrestore

# Ensure base ARM packages are installed first:
slackbasedeps

# Ensure $PKGNAM isn't already installed:
slackfailpkgdeps $PKGNAM || removepkg $PKGNAM

# Ensure specific build dependencies (mainly libraries):
{ slackcheckpkgdeps bzip2           || installpkg $PKGSTORE/a/bzip2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps mariadb         || installpkg $PKGSTORE/ap/mariadb-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps sqlite          || installpkg $PKGSTORE/ap/sqlite-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps alsa-lib        || installpkg $PKGSTORE/l/alsa-lib-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps freetype        || installpkg $PKGSTORE/l/freetype-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps glib2           || installpkg $PKGSTORE/l/glib2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps gst-plugins-base || installpkg $PKGSTORE/l/gst-plugins-base-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps gstreamer       || installpkg $PKGSTORE/l/gstreamer-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps lcms            || installpkg $PKGSTORE/l/lcms-[0-9]*.t?z    || exit 99; }
{ slackcheckpkgdeps libiodbc        || installpkg $PKGSTORE/l/libiodbc-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libjpeg-turbo   || installpkg $PKGSTORE/l/libjpeg-turbo-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libmng          || installpkg $PKGSTORE/l/libmng-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libpng          || installpkg $PKGSTORE/l/libpng-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libtiff         || installpkg $PKGSTORE/l/libtiff-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libxml2         || installpkg $PKGSTORE/l/libxml2-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps openssl         || installpkg $PKGSTORE/n/openssl-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps fontconfig      || installpkg $PKGSTORE/x/fontconfig-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libICE          || installpkg $PKGSTORE/x/libICE-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libSM           || installpkg $PKGSTORE/x/libSM-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps libX11          || installpkg $PKGSTORE/x/libX11-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libXext         || installpkg $PKGSTORE/x/libXext-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXrender      || installpkg $PKGSTORE/x/libXrender-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps mesa            || installpkg $PKGSTORE/x/mesa-[0-9]*.t?z    || exit 99; }

# Launch the package build script:
BUILDLOG=$( basename $SLACKPACKAGE .t?z ).build.log
( ./$PKGNAM-nowebkit.SlackBuild ) >& /dev/stdout | tee $BUILDLOG

# Compress the build log:
bzip2 -9fvz $BUILDLOG
