#!/bin/bash

# mozilla-nss.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for Slackware ARM.
#
# Copyright 2005, 2006, 2008, 2009, 2010, 2012  Eric Hameleers, Eindhoven, NL
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Version of bundled NSPR:
NSPR=${NSPR:-4.12}

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract sources:
#tar xvvf $CWD/nss-$VERSION.tar.?z* || exit 1
tar xvvf $PORTCWD/sources/nss-$VERSION.tar.?z* || exit 1
cd nss-$VERSION
# Apply patches:
auto_apply_patch $PORTCWD/sources/nss-539183.patch.xz || exit 1
#
slackhousekeeping
tar xvvf $CWD/nspr-$NSPR.tar.?z* || exit 1
mv nspr*/nspr .
slackhousekeeping

# Some build hacks:
fgrep -lr -- '-Werror' .  | xargs sed -i 's?-Werror?-Wall?g'

# Build:
echo Building ...
export LDFLAGS="-lz"
export CFLAGS="$SLKCFLAGS -Werror=unused-but-set-variable"
export CXXFLAGS="$SLKCFLAGS"
export BUILD_OPT=1
export NSDISTMODE="copy"
export NSS_USE_SYSTEM_SQLITE=1
export NSS_ENABLE_ECC=1
cd nss
  make nss_build_all export || exit 1
cd -

# Install into the package:
mkdir -vpm755 $PKG/usr/{bin,lib${LIBDIRSUFFIX},include/{nss,nspr}}
cd dist/$(uname -s)*
  cp -pL bin/{certutil,cmsutil,crlutil,modutil,pk12util,shlibsign,signtool,signver,ssltap} $PKG/usr/bin/
  cp -vpL lib/* $PKG/usr/lib${LIBDIRSUFFIX}/
  chmod 755 $PKG/usr/lib${LIBDIRSUFFIX}/*.so*
  cp -vrL include/* $PKG/usr/include/nspr/
  cp -vrpL ../public/nss/*.h $PKG/usr/include/nss/
  # Remove some things we do not need:
  rm -fv $PKG/usr/bin/*.so
  rm -fv $PKG/usr/lib${LIBDIRSUFFIX}/*.a
  rm -rvf $PKG/usr/include/nspr/md
  cp -L lib/libcrmf.a $PKG/usr/lib${LIBDIRSUFFIX}/ # yes, put this one back
cd -

cd nss/cmd/smimetools
  cp -fav smime $PKG/usr/bin/
  chmod 0755 $PKG/usr/bin/smime
  sed -i -e 's#/usr/local/bin#/usr/bin#g' $PKG/usr/bin/smime
cd -

# Install nspr-config:
cat nspr/$(uname -s)*/config/nspr-config | sed -e "s,prefix=/usr/local,prefix=/usr,g" | sed -e "s,libdir=\${exec_prefix}/lib,libdir=\${exec_prefix}/lib${LIBDIRSUFFIX},g" > $PKG/usr/bin/nspr-config
chmod 755 $PKG/usr/bin/nspr-config

# Install nss-config:
sed -e "s,@prefix@,/usr,g" \
    -e "s,@MOD_MAJOR_VERSION@,$(printf $VERSION | cut -d. -f1),g" \
    -e "s,@MOD_MINOR_VERSION@,$(printf $VERSION | cut -d. -f2),g" \
    -e "s,@MOD_PATCH_VERSION@,$(printf $VERSION | cut -d. -f3),g" \
    $CWD/nss-config.in > $PKG/usr/bin/nss-config
chmod 755 $PKG/usr/bin/nss-config

# Provide pkg-config files:
mkdir -vpm755 $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig
cat <<EOT > $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/mozilla-nss.pc
prefix=/usr
exec_prefix=\${prefix}
libdir=/usr/lib${LIBDIRSUFFIX}
includedir=\${prefix}/include/nss

Name: NSS
Description: Network Security Services
Version: $VERSION
Requires: nspr >= $NSPR sqlite3
Libs: -L\${libdir} -lnss3 -lsmime3 -lssl3 -lsoftokn3  -lnssutil3
Cflags: -I\${includedir}
EOT
cat <<EOT > $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/mozilla-nspr.pc
prefix=/usr
exec_prefix=\${prefix}
libdir=/usr/lib${LIBDIRSUFFIX}
includedir=\${prefix}/include/nspr

Name: NSPR
Description: The Netscape Portable Runtime
Version: $NSPR
Libs: -L\${libdir} -lplds4 -lplc4 -lnspr4
Cflags: -I\${includedir}
EOT

( cd $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig
  ln -vfs mozilla-nspr.pc nspr.pc
  ln -vfs mozilla-nss.pc nss.pc )

# Add documentation:
mkdir -vpm755 $PKG/usr/doc/$PKGNAM-$VERSION
cp -fav \
  $CWD/MPL-1.1.txt $CWD/gpl-2.0.txt $CWD/lgpl-2.1.txt \
  $CWD/faq.html \
  $PKG/usr/doc/$PKGNAM-$VERSION
changelogliposuction ChangeLog $PKGNAM $VERSION # Trim down a "ChangeLog" file

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
