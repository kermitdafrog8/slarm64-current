#!/bin/bash

# aspell-dict.SlackBuild
# by Stuart Winter <mozes@slackware.com> for the Slackware porting Project.
# Heavily based on the original Slackware build script.
# 17-Jun-2004

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Start the fakeroot server:
start_fakeroot

# We'll stash the many packages in here:
STASH=$TMPBUILD/$PKGNAM-stash
mkdir -p $STASH

# Create individual packages of each dictionary:
# **************************************************************************
# **************************************************************************
# Note: this isn't the normal Slackware ARM method - we DON'T auto update the
# build number here.  In x11 for example we compare the version number to
# the build and reset to 1 if it does not match.
#
# This package does not change often so it's never been a problem, but once
# this package is updated -- build this logic in here.
# **************************************************************************
# **************************************************************************
#
( cd $CWD/src
    for file in aspell*bz2 ; do
    NAME=`echo $file | cut -f 1-2 -d -`-`echo $file | cut -f 3- -d - | rev | cut -b9- | rev | tr '[\-]' '[_]'`
   if [ -s $PORTCWD/build-nums/$(basename $file | cut -f 1,2 -d -) ]; then
     BUILD="$( cat $PORTCWD/build-nums/$(basename $file | cut -f 1,2 -d -) )"
     echo "Found build number: $BUILD"
   else
     BUILD=1
     echo "No build number found: creating new housing file and setting to $BUILD"
     echo 1 > $( cat $PORTCWD/build-nums/$(basename $file | cut -f 1,2 -d -) )
   fi
    rm -rf $PKG
    mkdir -p $PKG
    cd $TMPBUILD
    tar xf $CWD/src/$file
    cd `basename $file .tar.bz2`
    slackhousekeeping
    ./configure || exit 1
    make || exit 1
    make install DESTDIR=$PKG || exit 1
    # Use a uniform package name.
    NAME=$(echo $NAME | sed 's/aspell5/aspell/' | sed 's/aspell6/aspell/')
    mkdir -p $PKG/usr/doc/${NAME}
    cp -a README Copyright $PKG/usr/doc/${NAME}
    mkdir $PKG/install
    SLACKDESC=$(echo $NAME | cut -f 1-2 -d -)
    echo "${SLACKDESC}: ${SLACKDESC}" > $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}: $(head -n 1 README)." >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    echo "${SLACKDESC}:" >> $PKG/install/slack-desc
    cd $PKG
    slackslack
    makepkg -l y -c n $STASH/${NAME}-$PKGARCH-$BUILD.txz
  done )

# Move the packages into the correct locations:
cd $STASH
rm -vf $PKGSTORE/l/aspell-[a-z]*-[0-9]*-$PKGARCH.{t?z,asc,txt}
# The English one lives in the main tree:
mv -fv aspell-en-*.t?z $PKGSTORE/l/
# The rest live in /extra (along with a copy of the aspell-en package that resides
# in l/) :
mkdir -vpm755 $PKGSTORE/../extra/aspell-word-lists/
rm -rf $PKGSTORE/../extra/aspell-word-lists/*
mv -fv *.t?z $PKGSTORE/../extra/aspell-word-lists/
