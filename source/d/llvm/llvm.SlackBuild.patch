--- a/llvm.SlackBuild	2021-02-17 21:10:35.708021535 +0200
+++ b/llvm.SlackBuild	2021-02-25 23:58:49.747950645 +0200
@@ -59,6 +59,12 @@
 elif [ "$ARCH" = "x86_64" ]; then
   SLKCFLAGS="-O2 -fPIC"
   LIBDIRSUFFIX="64"
+elif [ "$ARCH" = "aarch64" ]; then
+  SLKCFLAGS="-O2 -fPIC"
+  LIBDIRSUFFIX="64"
+elif [ "$ARCH" = "riscv64" ]; then
+  SLKCFLAGS="-O2 -fPIC"
+  LIBDIRSUFFIX="64"
 else
   SLKCFLAGS="-O2"
   LIBDIRSUFFIX=""
@@ -118,6 +124,15 @@
 # Hack to fix build with polly. Maybe we should just not use polly... ?
 zcat $CWD/llvm.polly.hack.diff.gz | patch -p1 --verbose || exit 1
 
+xzcat $CWD/clang.dynamic.linker.aarch64.patch.xz | patch -p1 --verbose || exit 1
+xzcat $CWD/clang.toolchains.aarch64.triple.patch.xz | patch -p1 --verbose || exit 1
+
+xzcat $CWD/clang.dynamic.linker.riscv64.patch.xz | patch -p1 --verbose || exit 1
+xzcat $CWD/clang.toolchains.riscv64.triple.patch.xz | patch -p1 --verbose || exit 1
+
+# Better detect 64bit atomics support.
+xzcat $CWD/llvm-better-detect-64bit-atomics-support.patch.xz | patch -p1 --verbose || exit 1
+
 # As of clang-tools-extra-7.0.0 we get the following error on i586 or i686:
 # CMakeFiles/clangDaemon.dir/Trace.cpp.o:Trace.cpp:function std::unique_ptr<clang::clangd::trace::(anonymous namespace)::JSONTracer::JSONSpan, std::default_delete<clang::clangd::trace::(anonymous namespace)::JSONTracer::JSONSpan> >::~unique_ptr(): error: undefined reference to '__atomic_load_8'
 # Attempts to try to fix this have failed here, so for now we will not build
@@ -136,6 +151,15 @@
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
   -exec chmod 644 {} \+
 
+if [[ "$ARCH" == "riscv64" ]]; then
+    # /usr/bin/ld: lib64/liblldbPluginProcessLinux.a(NativeThreadLinux.cpp.o): in function `.LBB0_1':
+    # NativeThreadLinux.cpp:(.text._ZN12lldb_private13process_linux17NativeThreadLinuxC2ERNS0_18NativeProcessLinuxEm+0x46): undefined reference to `lldb_private::process_linux::NativeRegisterContextLinux::CreateHostNativeRegisterContextLinux(lldb_private::ArchSpec const&, lldb_private::NativeThreadProtocol&)'
+    OPTIONS="-DLLDB_TOOL_LLDB_SERVER_BUILD=OFF"
+    CLANGD="-DCLANG_ENABLE_CLANGD=OFF"
+else
+    OPTIONS="-DLLVM_USE_LINKER=gold"
+fi
+
 mkdir build
 cd build
   cmake -GNinja \
@@ -147,7 +171,7 @@
     -DLLVM_LIBDIR_SUFFIX=${LIBDIRSUFFIX} \
     -DCMAKE_BUILD_TYPE=Release \
     -DBUILD_SHARED_LIBS=ON \
-    -DLLVM_USE_LINKER=gold \
+    $OPTIONS \
     -DLLVM_ENABLE_RTTI=ON \
     -DLLVM_ENABLE_FFI=ON \
     -DLLVM_ENABLE_ASSERTIONS=OFF \
