#!/bin/bash

# glibc-zoneinfo.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for Slackware ARM.
#
# Copyright 2015  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xzf $CWD/tzdata?????.tar.gz
tar xzf $CWD/tzcode?????.tar.gz
slackhousekeeping

# Determine versions - need to switch in to the x86 tree:
pushd $CWD
ZONE_VERSIONS="$( echo tzdata* | cut -f1 -d . | cut -b7-11 )"
popd

sed -i "s,/usr/local,$(pwd),g" Makefile
sed -i "s,/etc/zoneinfo,/zoneinfo,g" Makefile
make || exit 1

# Install:
make install || exit 1
mkdir -p $PKG/usr/share/zoneinfo
cd etc
cp -fav zoneinfo/* $PKG/usr/share/zoneinfo

# These are all identical to the normal zoneinfo files, so let's hard link
# them to save space:
cp -falv $PKG/usr/share/zoneinfo $PKG/usr/share/posix
mv -fv $PKG/usr/share/posix $PKG/usr/share/zoneinfo

mkdir -vpm755 $PKG/usr/share/zoneinfo/right
cp -fav zoneinfo-leaps/* $PKG/usr/share/zoneinfo/right

# Remove $PKG/usr/share/zoneinfo/localtime -- the install script will
# create it as a link to /etc/localtime.
rm -fv $PKG/usr/share/zoneinfo/localtime

# Install some scripts to help select a timezone:
mkdir -vpm755 $PKG/var/log/setup
install -vpm755 $CWD/timezone-scripts/setup.timeconfig $PKG/var/log/setup
mkdir -vpm755 $PKG/usr/sbin
install -vpm755 $CWD/timezone-scripts/timeconfig $PKG/usr/sbin
( cd $CWD/timezone-scripts
  # Try to rebuild this:
  sh output-updated-timeconfig.sh $PKG/usr/share/zoneinfo > $PKG/usr/sbin/timeconfig 2> /dev/null
)

# Note in timeconfig which zoneinfo database was used:
sed -i "s/# ChangeLog:/# ChangeLog:\n# $(date '+%Y-%m-%d'):   Updated timezones from tzdata${ZONE_VERSIONS}./g" $PKG/usr/sbin/timeconfig

# Don't forget to add the /usr/share/zoneinfo/localtime -> /etc/localtime symlink! :)
if [ ! -r $PKG/usr/share/zoneinfo/localtime ]; then
  ( cd $PKG/usr/share/zoneinfo ; ln -vsf ../../../etc/localtime . )
fi

# Add documentation:
mkdir -vpm755 $PKG/usr/doc/$PKGNAM-$VERSION-$ZONE_VERSIONS
cp -fav \
  CONTRIBUTING NEWS README Theory \
  $PKG/usr/doc/$PKGNAM-$VERSION-$ZONE_VERSIONS
#changelogliposuction ChangeLog $PKGNAM $VERSION # Trim down a "ChangeLog" file
#changelogliposuction CHANGES $PKGNAM $VERSION # Trim down a "ChangeLog" file

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # set standard Slackware file/dir permissions and ownerships
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
