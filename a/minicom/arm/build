#!/bin/bash

# arm/build
# Check package dependencies, set metadata and launch
# package build script.
# by Stuart Winter <mozes@slackware.com>
#
source /usr/share/slackdev/buildkit.sh

# Package metadata:
export PKGNAM=minicom
export VERSION=${VERSION:-2.7.1}
export BUILD=${BUILD:-1}
#export BUILD=${BUILD:-1_slack14.2}
export PKGSERIES=${PKGSERIES:-a}
export SLACKPACKAGE=$PKGNAM-$VERSION-$PKGARCH-$BUILD.txz

## ******************************************************************* ##
# For test packages - best to store in another location rather than
# overwriting the working copy in the main tree:
# export PKGSTORE=/tmp/
# mkdir -vpm755 $PKGSTORE/$PKGSERIES
## ******************************************************************* ##

# Reset the ARM file system: restore it to the 'factory settings'
# as it were (this has no effect when building natively):
sboxsysrestore

# Ensure base ARM packages are installed first:
slackbasedeps

# Ensure $PKGNAM isn't already installed:
slackfailpkgdeps $PKGNAM || removepkg $PKGNAM

# minicom has some non-2.5.x-compatible configure scripts:
#slackcheckpkgdeps autoconf2.13 || installpkg $PKGSTORE/../unsupported-extra/packages/autoconf2.13-*t?z
#removepkg autoconf

# Ensure specific build dependencies (mainly libraries):

# Launch the package build script:
BUILDLOG=$( basename $SLACKPACKAGE .t?z ).build.log
( ./$PKGNAM.SlackBuild ) >& /dev/stdout | tee $BUILDLOG

# Compress the build log:
bzip2 -9fvz $BUILDLOG

# Put back auto{make,conf} (lrzsz needs to have them both removed before it will build):
#upgradepkg --install-new $PKGSTORE/d/auto{make,conf}-*.t?z 

# Now remove the autoconf packages - I don't want autoconf2.13 lying around
# and autoconf-2.5x needs to be reinstalled to become the operational version:
#removepkg autoconf autoconf2.13
