--- a/llvm.SlackBuild	2018-03-11 15:36:20.264685219 +0200
+++ b/llvm.SlackBuild	2018-03-11 15:43:44.058685219 +0200
@@ -50,6 +50,9 @@
 elif [ "$ARCH" = "x86_64" ]; then
   SLKCFLAGS="-O2 -fPIC"
   LIBDIRSUFFIX="64"
+elif [ "$ARCH" = "aarch64" ]; then
+  SLKCFLAGS="-O2"
+  LIBDIRSUFFIX="64"
 else
   SLKCFLAGS="-O2"
   LIBDIRSUFFIX=""
@@ -109,13 +112,24 @@
 # is fixed.
 zcat $CWD/clang_disable_pgo.patch.gz | patch -p1 --verbose || exit 1
 
+# FIXME: Symbol versioning breaks some unittests when statically linking
+# libstdc++, so we disable it for now.
+xzcat $CWD/0001-Revert-Add-a-linker-script-to-version-LLVM-symbols.patch.xz | patch -Np1 --verbose || exit 1
+xzcat $CWD/0001-DebugInfo-Discard-invalid-DBG_VALUE-instructions-in-.patch.xz | patch -Np1 --verbose || exit 1
+xzcat $CWD/0001-Fixup-for-rL326769-RegState-Debug-is-being-truncated.patch.xz | patch -Np1 --verbose || exit 1
+
+CCOMPILER=gcc
+CPPCOMPILER=g++
+which clang > /dev/null 2>&1 && { CCOMPILER=clang ; CPPCOMPILER=clang++ ;}
+echo "Using compiler: $CCOMPILER / $CPPCOMPILER"
+
 # need to disable assertions to make llvm thread-safe
 # clang resource dir is a relative path based on the location of the clang binary
 mkdir build
 cd build
   cmake \
-    -DCMAKE_C_COMPILER="clang" \
-    -DCMAKE_CXX_COMPILER="clang++" \
+    -DCMAKE_C_COMPILER="$CCOMPILER" \
+    -DCMAKE_CXX_COMPILER="$CPPCOMPILER" \
     -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
     -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
     -DCMAKE_INSTALL_PREFIX=/usr \
