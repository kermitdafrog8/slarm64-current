#!/bin/sh

# Copyright 2008, 2009, 2010, 2013, 2015, 2017  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


VERSION=9c43d428
DIRNAME=9c43d428
BUILD=${BUILD:-1}

# Bundled libraries:
FFCALLVER=1.13

# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "s390" ]; then
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
elif [ "$ARCH" = "aarch64" ]; then
  SLKCFLAGS="-O0"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=${NUMJOBS:-" -j7 "}

CWD=$(pwd)
TMP=${TMP:-/tmp}
PKG=$TMP/package-clisp

rm -rf $PKG
mkdir -p $TMP $PKG



#=================================================================
 
# OK, now we compile CLISP:
cd $TMP
rm -rf clisp-$VERSION
tar xvf $CWD/clisp-$VERSION.tar.?z* || exit 1
cd clisp-$DIRNAME || exit 1
chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \; -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \;

cat $CWD/clisp-2.49-personality.patch | patch -p1 --verbose || exit 1
# PATCH-FIX-OPENSUSE Fix crash on Ia64
cat $CWD/clisp-2.39-ia64-wooh.dif | patch -p1 --verbose || exit 1
# PATCH-EXTEND-OPENSUSE Help (new) CLX to work out of the box
cat $CWD/clisp-2.39-clx.dif | patch -p1 --verbose || exit 1
# PATCH-EXTEND-OPENSUSE Make sure to be able to use MYCLFAGS
cat $CWD/clisp-2.49-configure.dif | patch -p1 --verbose || exit 1
# PATCH-FIX-OPENSUSE Make sure to use initialized token on garbage collection
cat $CWD/clisp-2.49-gctoken.dif | patch -p1 --verbose || exit 1
# PATCH-FEATURE-OPENSUSE Make CLX demos usable at runtime
cat $CWD/clisp-2.49-clx_demos.dif | patch -p1 --verbose || exit 1
# PATCH-EXTEND-OPENSUSE Enable postgresql SSL feature
cat $CWD/clisp-2.49-postgresql.dif | patch -p1 --verbose || exit 1
# PATCH-FIX-OPENSUSE Do not use rpath but rpath-link
cat $CWD/clisp-2.49-rpath.dif | patch -p1 --verbose || exit 1
# PATCH-FIX-OPENSUSE Correct path for header for System V IPC system calls
cat $CWD/clisp-linux.patch | patch -p1 --verbose || exit 1
# PATCH-EXTEND-UPSTREAM Make armv7l work
cat $CWD/clisp-arm.patch | patch -p0 --verbose || exit 1
cat $CWD/clisp-link.dif | patch -p0 --verbose || exit 1
cat $CWD/clisp-db6.diff | patch -p1 --verbose || exit 1

# Overwrite stack size limit (hopefully a soft limit only)
ulimit -Ss unlimited || true
ulimit -Hs unlimited || true
unset LC_CTYPE
LANG=POSIX
LC_ALL=POSIX
export LANG LC_ALL

# I'll be unsafe if I want to:
export FORCE_UNSAFE_CONFIGURE=1

CC="gcc -g ${SLKCFLAGS} -falign-functions=4 -fno-strict-aliasing -fPIC -pipe"
SLKCFLAGS="${SLKCFLAGS} -Wno-unused -Wno-uninitialized"
export CC
#export CFLAGS
export CFLAGS="$SLKCFLAGS -Wa,--noexecstack"
export LDFLAGS="$SLKCFLAGS -Wl,-z,noexecstack"

./configure \
  --cbc build \
  --prefix=/usr \
  --exec-prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --mandir=/usr/man \
  --docdir=/usr/doc/clisp-$VERSION \
  --fsstnd=slackware \
  --with-readline \
  --with-dynamic-modules \
  --with-gettext \
  --with-module=asdf \
  --with-module=editor \
  --with-module=dbus \
  --with-module=queens \
  --with-module=gdbm \
  --with-module=gtk2 \
  --with-module=pcre \
  --with-module=rawsock \
  --with-module=zlib \
  --with-module=bindings/glibc \
  --with-module=clx/new-clx \
  --with-module=berkeley-db \
  --build=$ARCH-slackware-linux || exit 1

make -C build || exit 1
#make $NUMJOBS -C build check || exit 1
make install -C build DESTDIR=$PKG || exit 1

# Strip stuff:
find $PKG | xargs file | grep -e "executable" -e "shared object" \
  | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null

#mv $PKG/usr/share/doc/clisp/* $PKG/usr/doc/clisp-$VERSION
rm -r $PKG/usr/share/doc

mv $PKG/usr/share/man $PKG/usr/man
gzip -9 $PKG/usr/man/man?/*.?

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Build the package:
cd $PKG
/sbin/makepkg -l y -c n $TMP/clisp-$VERSION-$ARCH-$BUILD.txz

