#!/bin/bash

# sqlite.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for ARMedslack.
#
# Copyright 2006  Martin Lefebvre <dadexter@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Enable some features:
#SLKCFLAGS="SLKCFLAGS -DSQLITE_ENABLE_FTS3 -DSQLITE_ENABLE_FTS3_PARENTHESIS=1 -DSQLITE_ENABLE_ICU -DSQLITE_ENABLE_COLUMN_METADATA=1 -DSQLITE_DISABLE_DIRSYNC=1 -DSQLITE_ENABLE_RTREE=1 -DSQLITE_ENABLE_STAT2=1 -DSQLITE_ENABLE_UNLOCK_NOTIFY=1 -DSQLITE_SECURE_DELETE=1"
# Define C preprocessor feature switches
# https://www.sqlite.org/compile.html

# Enable AND, NOT and nested parenthesis in FTS3
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_FTS3_PARENTHESIS=1"

# Enable the ICU extension
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_ICU"

# Enables the retrieval of column metadata
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_COLUMN_METADATA=1"

# Disable directory syncs
SLKCFLAGS="$SLKCFLAGS -DSQLITE_DISABLE_DIRSYNC=1"

# Add additional logic to the ANALYZE command and to the query planner
# to chose better query plans under certain situations
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_STAT4=1"

# Enable the sqlite3_unlock_notify() interface and its associated functionality
# https://www.sqlite.org/unlock_notify.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_UNLOCK_NOTIFY=1"

# The secure_delete setting causes deleted content to be overwritten with zeros
# https://www.sqlite.org/pragma.html#pragma_secure_delete
SLKCFLAGS="$SLKCFLAGS -DSQLITE_SECURE_DELETE=1"

# Enable the "Resumable Bulk Update" extension
# https://www.sqlite.org/rbu.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_RBU=1"

# Enable the DBSTAT Virtual Table
# https://www.sqlite.org/dbstat.html
SLKCFLAGS="$SLKCFLAGS -DSQLITE_ENABLE_DBSTAT_VTAB=1"

# Extract source:
tar xvvf $CWD/$PKGNAM-*.tar.?z*
#tar xvvf $PORTCWD/sources/$PKGNAM-$VERSION.tar.?z*
cd $PKGNAM* || exit 1
slackhousekeeping

if [ ! -f configure ]; then
  # Try regenerating configure:
  autoreconf -vif
fi

# Fix a bug in ./configure that discards all but the last considered option:
sed -i "s|\$(OPT_FEATURE_FLAGS)|\${OPT_FEATURE_FLAGS}|g" ./configure

# Apply build and packaging fixes:
#tar xvvf $PORTCWD/sources/*debian*xz
#for pf in debian/patches/*.patch ; do
#  auto_apply_patch $pf || exit 1
#done

# Apply patches:
#for pf in \
#    sqlite-3.12.2-no-malloc-usable-size.patch \
#    sqlite-3.6.23-lemon-system-template.patch \
#    sqlite-3.7.7.1-stupid-openfiles-test.patch \
#    sqlite-3.8.0-percentile-test.patch \
#    sqlite-3.8.10.1-tcl-regress-tests.patch \
#    ; do auto_apply_patch $PORTCWD/sources/${pf}.xz || exit 1
#done

# Configure:
configure() {

# Store the failure C code tests:
#sed -i 's?rm -f ?echo rm -f?g' configure || exit 1

CXXFLAGS="$SLKCFLAGS $(icu-config --cppflags)" \
CFLAGS="$SLKCFLAGS $(icu-config --cppflags)" \
LDFLAGS="-ldl $(icu-config --ldflags)" \
./configure \
   --prefix=/usr \
   --libdir=/usr/lib${LIBDIRSUFFIX} \
   --mandir=/usr/man \
   --sysconfdir=/etc \
   --localstatedir=/var \
   --enable-threadsafe \
   --enable-fts3 \
   --enable-fts4 \
   --enable-fts5 \
   --enable-json1 \
   --enable-rtree \
   --enable-session \
   --enable-tempstore=yes \
   --enable-load-extension \
   --enable-static=no \
   --build=${SLK_ARCH_BUILDTARGET} \
   --host=${SLK_ARCH_BUILDTARGET} \
   --target=${SLK_ARCH_BUILDTARGET}
   return $?
}

if ! configure ; then
  # Try regenerating configure:
  autoconf
  configure || exit 1
fi

# rpath removal
sed -i 's|^hardcode_libdir_flag_spec=.*|hardcode_libdir_flag_spec=""|g' libtool
sed -i 's|^runpath_var=LD_RUN_PATH|runpath_var=DIE_RPATH_DIE|g' libtool

# Build:
make $NUMJOBS || make || failmake

# Install into package:
make install DESTDIR=$PKG || failinstall

# Add missed man page:
install -D -m 0644 sqlite3.1 $PKG/usr/man/man1/sqlite3.1
gzip -9 $PKG/usr/man/man1/sqlite3.1

# Fix up the pkgconfig file
sed -i 's|Libs: -L${libdir} -lsqlite3|Libs: -L${libdir} -lsqlite3 -ldl|g' \
  $PKG/usr/lib${LIBDIRSUFFIX}/pkgconfig/sqlite3.pc

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
  README* VERSION \
  $PKG/usr/doc/$PKGNAM-$VERSION
# Add a COPYRIGHT file -- http://www.sqlite.org/copyright.html
zcat $CWD/COPYRIGHT.gz > $PKG/usr/doc/$PKGNAM-$VERSION/COPYRIGHT
rm -rf $PKG/usr/doc/$PKGNAM-$VERSION/CVS

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
