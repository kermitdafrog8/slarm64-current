#!/bin/bash

# cups.SlackBuild
# Heavily based on the original Slackware build script by Patrick Volkerding,
# Modified by Stuart Winter <mozes@slackware.com>
# 24-Jul-2004
#
# Copyright 2008, 2009  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xvvf $CWD/$PKGNAM-$VERSION-source.tar.xz
cd $PKGNAM-$VERSION || exit 1
slackhousekeeping

# Apply patches:
zcat $CWD/cups.fix.empty.print.list.diff.gz | patch -R -p1 --verbose || exit 1

# Create package framework:
mkdir -p $PKG/{etc/cups,var/spool,usr/doc}

# Turn off stack protector.
#fgrep -lr -- '-fstack-protector' . | xargs sed -i 's?-fstack-protector?-fno-stack-protector?g'

# Patches:
sed -i.orig -e 's#$exec_prefix/lib/cups#$libdir/cups#g' configure

# Configure:
#aclocal && autoconf || failconfig
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
   --libdir=/usr/lib${LIBDIRSUFFIX} \
   --enable-ssl \
   --enable-gnutls=yes \
   --enable-cdsassl=no \
   --docdir=/usr/doc \
   --without-php \
   --disable-pam \
   --disable-avahi \
   --disable-dnssd \
   --build=$ARCH-slackware-linux-gnueabi \
   --host=$ARCH-slackware-linux-gnueabi \
   --target=$ARCH-slackware-linux-gnueabi || failconfig

# Build:
make $NUMJOBS || make || failmake

# Start fakeroot server if required:
#start_fakeroot

# Install into package:
mkdir -p $PKG/etc/cups
mkdir -p $PKG/var/spool
make BUILDROOT=$PKG install || failinstall

# Blacklist the usblp module just to make sure that it doesn't cause
# any problems:
mkdir -p $PKG/lib/modprobe.d
cp -a $CWD/cups-blacklist-usblp.conf $PKG/lib/modprobe.d
chown root:root $PKG/lib/modprobe.d/cups-blacklist-usblp.conf
chmod 644 $PKG/lib/modprobe.d/cups-blacklist-usblp.conf

# Remove files that overlap with the cups-filters package:
( cd $PKG
  rm -f \
  usr/share/cups/banners/classified \
  usr/share/cups/banners/confidential \
  usr/share/cups/banners/secret \
  usr/share/cups/banners/standard \
  usr/share/cups/banners/topsecret \
  usr/share/cups/banners/unclassified \
  usr/share/cups/data/testprint
)

# Hey, what's with the gigantic test files?  Bloat is bad.
rm -f $PKG/usr/share/cups/ipptool/*.{pdf,ps,jpg}

# I've added so many things like /etc/init.d/ to Slackware that CUPS
# is now installing init scripts to the Red Hat locations.  We'll move
# them to the usual locations:
#-- For ARMedslack these things don't get installed in the same locations
#
mv -fv $PKG/etc/rc.d/init.d/cups $TMPBUILD/rc.cups.new
# Get rid of the SysV-style dir structure:
rm -rf $PKG/etc/rc.d
# And now put back the Slackware standard & install the rc script:
mkdir -vpm755 $PKG/etc/rc.d
install -oroot -groot -vpm644 $TMPBUILD/rc.cups.new $PKG/etc/rc.d/

# Sanity check:
if [ ! -f $PKG/etc/rc.d/rc.cups.new ]; then
   echo "ERROR: /etc/rc.d/rc.cups.new is missing"
   exit 1
fi

# I'm not sure if overwriting this blindly could have ill effects,
# but it never hurts to play it safe.  According to the dbus-daemon
# manpage, only files ending in .conf will be used, so there won't
# be any unintended doubling up.
mv $PKG/etc/dbus-1/system.d/cups.conf $PKG/etc/dbus-1/system.d/cups.conf.new

# However, this will get you the most useful SMB support for free.
# Thanks to Boris Kurktchiev for the tip.  :-)
( cd $PKG/usr/lib${LIBDIRSUFFIX}/cups/backend
  if [ ! -e smb ]; then
    ln -sf /usr/bin/smbspool smb
  fi
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Remove preformatted manpages and move the manpages to /usr/man:
( cd $PKG/usr/share/man
  find . -type d -name "cat*" | xargs rm -rf
  cd ..
  mv man ..
)

# Adjust/expand docs:
( mkdir -p $PKG/usr/doc
  mv $PKG/usr/share/doc/cups $PKG/usr/doc/cups-$VERSION
  rmdir $PKG/usr/share/doc
  cd $PKG/usr/doc
  ln -sf cups-$VERSION cups )
changelogliposuction ChangeLog $PKGNAM $VERSION

# I'm sorry, but PDF files are almost as bloated and annoying as
# MS Word documents.  We'll retain the HTML files in /usr/doc.
( cd $PKG/usr/doc
  find . -name "*.pdf" -exec rm -f {} \; )

# Handle .conf files with config() in the install script.
# Not .conf.default copies, though.
( cd $PKG/etc/cups
  for file in *.conf ; do
    if [ -f $file ]; then
      mv -fv $file $file.new
    fi
  done )

# Use symlinks to certain binaries so that CUPS and LPRng can coexist:
SUFFIX=cups
for file in \
usr/bin/cancel \
usr/bin/lp \
usr/bin/lpq \
usr/bin/lpr \
usr/bin/lprm \
usr/bin/lpstat \
usr/sbin/lpc ; do
  ( cd $PKG
    mv ${file} ${file}-${SUFFIX}
    ( cd `dirname ${file}` ; ln -sf `basename ${file}`-${SUFFIX} `basename ${file}` )
  )
done
# Now fix the associated man pages:
mv $PKG/usr/man/man1/cancel.1.gz $PKG/usr/man/man1/cancel-${SUFFIX}.1.gz
mv $PKG/usr/man/man1/lp.1.gz $PKG/usr/man/man1/lp-${SUFFIX}.1.gz
mv $PKG/usr/man/man1/lpq.1.gz $PKG/usr/man/man1/lpq-${SUFFIX}.1.gz
mv $PKG/usr/man/man1/lpr.1.gz $PKG/usr/man/man1/lpr-${SUFFIX}.1.gz
mv $PKG/usr/man/man1/lprm.1.gz $PKG/usr/man/man1/lprm-${SUFFIX}.1.gz
mv $PKG/usr/man/man1/lpstat.1.gz $PKG/usr/man/man1/lpstat-${SUFFIX}.1.gz
mv $PKG/usr/man/man8/lpc.8.gz $PKG/usr/man/man8/lpc-${SUFFIX}.8.gz
( cd $PKG/usr/man/man1
  ln -sf cancel-${SUFFIX}.1.gz cancel.1.gz
  ln -sf lp-${SUFFIX}.1.gz lp.1.gz
  ln -sf lpq-${SUFFIX}.1.gz lpq.1.gz
  ln -sf lpr-${SUFFIX}.1.gz lpr.1.gz
  ln -sf lprm-${SUFFIX}.1.gz lprm.1.gz
  ln -sf lpstat-${SUFFIX}.1.gz lpstat.1.gz
)
( cd $PKG/usr/man/man8
  ln -sf lpc-${SUFFIX}.8.gz lpc.8.gz
)

# Set Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slack644docs    # Set the correct permissions for docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
