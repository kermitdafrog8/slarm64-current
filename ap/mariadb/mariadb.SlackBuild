#!/bin/bash

# mariadb.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for Slackware ARM.
#
# Copyright 2008, 2009, 2010, 2012, 2013  Patrick J. Volkerding, Sebeka, Minnesota, USA
# Copyright 2011, 2012, 2013  Heinz Wiesinger, Amsterdam, The Netherlands
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Build and install MySQL on Slackware
# by:  David Cantrell <david@slackware.com>
# MariaDB conversion by:  Heinz Wiesinger <pprkut@liwjatan.at>
# Also maintained by:  Patrick Volkerding <volkerdi@slackware.com>

# Record toolchain & other info for the build log:
slackbuildinfo

# To reduce the package size, the embedded server may be omitted.  Currently
# only amarok uses this.  To build without embedded support, set this to NO.
EMBEDDED=${EMBEDDED:-YES}

# Don't keep the large static libraries by default:
KEEPSTATIC=${KEEPSTATIC:-NO}

# Don't keep the test suite by default:
KEEPTESTS=${KEEPTESTS:-NO}

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xvvf $CWD/$PKGNAM-$VERSION.tar.xz
cd $PKGNAM-$VERSION || exit 1
slackhousekeeping

# Apply patches:

# Compiling with -Werror and gcc7 is unreasonably brittle:
zcat $CWD/mariadb.no-werror.diff.gz | patch -p1 --verbose || exit 1

# Fix linking with libwrap
sed -i "s|\${CMAKE_REQUIRED_LIBRARIES} wrap|\${CMAKE_REQUIRED_LIBRARIES} wrap nsl|" \
  configure.cmake

# Configure:
mkdir build
cd build
cmake \
  -DCMAKE_C_FLAGS="$SLKCFLAGS" \
  -DCMAKE_CXX_FLAGS="$SLKCFLAGS -felide-constructors -fno-exceptions -fno-rtti" \
  -DBUILD_CONFIG=mysql_release \
  -DFEATURE_SET="community" \
  -DINSTALL_LAYOUT="RPM" \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DINSTALL_LIBDIR="lib${LIBDIRSUFFIX}" \
  -DINSTALL_SBINDIR=libexec \
  -DINSTALL_INCLUDEDIR=include/mysql \
  -DINSTALL_MYSQLSHAREDIR=share/mysql \
  -DINSTALL_SQLBENCHDIR= \
  -DINSTALL_MYSQLTESTDIR=mysql-test \
  -DINSTALL_MANDIR=man \
  -DINSTALL_PLUGINDIR="lib${LIBDIRSUFFIX}/mysql/plugin" \
  -DINSTALL_SCRIPTDIR=bin \
  -DINSTALL_SUPPORTFILESDIR=share/mysql \
  -DINSTALL_MYSQLDATADIR="/var/lib/mysql" \
  -DINSTALL_DOCREADMEDIR="doc/${PKGNAM}-$VERSION" \
  -DINSTALL_DOCDIR="doc/${PKGNAM}-$VERSION" \
  -DMYSQL_DATADIR="/var/lib/mysql" \
  -DMYSQL_UNIX_ADDR="/var/run/mysql/mysql.sock" \
  -DWITH_EXTRA_CHARSETS=complex \
  -DWITH_INNOBASE_STORAGE_ENGINE=1 \
  -DENABLED_LOCAL_INFILE=ON \
  -DWITH_EMBEDDED_SERVER=${EMBEDDED} \
  -DWITH_READLINE=ON \
  -DWITH_SSL=system \
  -DWITH_ZLIB=system \
  -DWITH_JEMALLOC=system \
  -DUSE_ARIA_FOR_TMP_TABLES=ON \
  .. || exit 1

# Build:
make $NUMJOBS || make || failmake

# Install into package framework:
make install DESTDIR=$PKG || failinstall

# Leave build directory:
cd ..

if [ "$KEEPSTATIC" = "NO" ]; then
  # Remove large static libraries:
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqlclient.a
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqlclient_r.a
  rm -f $PKG/usr/lib${LIBDIRSUFFIX}/libmysqld.a
fi

if [ "$KEEPTESTS" = "NO" ]; then
  # Do not include the test suite:
  rm -rf $PKG/usr/mysql-test
fi

# The ./configure option to omit this has gone away, so we'll omit it
# the old-fashioned way.  It's all in the source tarball if you need it.
rm -rf $PKG/usr/sql-bench

# This is the directory where databases are stored
mkdir -p $PKG/var/lib/mysql
chown mysql:mysql $PKG/var/lib/mysql
chmod 0750 $PKG/var/lib/mysql

# This is where the socket is stored
mkdir -p $PKG/var/run/mysql
chown mysql:mysql $PKG/var/run/mysql
chmod 0755 $PKG/var/run/mysql

# Add init script:
mkdir -p $PKG/etc/rc.d
# This is installed chmod 644 so that the server does not run by default.
zcat $CWD/rc.mysqld.gz > $PKG/etc/rc.d/rc.mysqld.new
rm -rf $PKG/etc/init.d

# Install mysqlaccess.conf
install -m 644 scripts/mysqlaccess.conf $PKG/etc/mysqlaccess.conf.new

# Mark config files under /etc as .new
mv $PKG/etc/my.cnf $PKG/etc/my.cnf.new
mv $PKG/etc/logrotate.d/mysql $PKG/etc/logrotate.d/mysql.new
for i in client mysql-clients server; do
  mv $PKG/etc/my.cnf.d/$i.cnf $PKG/etc/my.cnf.d/$i.cnf.new
done

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
