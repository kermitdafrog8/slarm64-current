#!/bin/bash
set +o posix
# samba.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter <mozes@slackware.com>
# 06-Aug-2004
#
# Copyright 2008, 2009, 2010, 2012, 2013, 2015, 2016  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xvvf $CWD/$PKGNAM-$VERSION.tar.xz
cd $PKGNAM-$VERSION || exit 1
slackhousekeeping

# Patch to install talloc/tevent/tdb libraries and includes:
zcat $CWD/samba.install.talloc.tevent.tdb.diff.gz | patch -p1 --verbose || exit 1

if [ ! -d source3/lib/cmdline ]; then
  ( cd source3/lib
    mkdir cmdline
    cd cmdline
    ln -sf ../../../source3/include/popt_common.h . )
fi

# Apply patches:
#tar xvvf $PORTCWD/sources/sam*debian*
#while read i ; do
#  auto_apply_patch debian/patches/$i || exit 1
#done< <(cat debian/patches/series)

# Some of these options could be auto-detected, but declaring them
# here doesn't hurt and helps document what features we're trying to
# build in.
#LDFLAGS="-Wl,--no-as-needed" \
CFLAGS="$SLKCFLAGS -fstack-protector --param=ssp-buffer-size=4" \
CPPFLAGS="-D_FORTIFY_SOURCE=2" \
CXXFLAGS="$SLKCFLAGS -fstack-protector --param=ssp-buffer-size=4" \
FFLAGS="$SLKCFLAGS" \
LDFLAGS="-Wl,-z,relro -Wl,--no-as-needed" \
./configure \
  --enable-fhs \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --includedir=/usr/include \
  --bindir=/usr/bin \
  --sbindir=/usr/sbin \
  --mandir=/usr/man \
  --sysconfdir=/etc \
  --with-configdir=/etc/samba \
  --with-privatelibdir=/usr/lib${LIBDIRSUFFIX} \
  --with-modulesdir=/usr/lib${LIBDIRSUFFIX} \
  --with-piddir=/var/run \
  --with-privatedir=/var/lib/samba/private \
  --with-lockdir=/var/cache/samba \
  --with-logfilebase=/var/log/samba \
  --localstatedir=/var \
  --enable-cups \
  --with-automount \
  --with-quotas \
  --with-syslog \
  --with-utmp \
  --with-winbind \
  --with-ldap \
  --without-pam \
  --with-acl-support \
  --with-ads \
  --build=${SLK_ARCH_BUILDTARGET} || failconfig

# Build:
# -j options don't seem to work...
JOBS=$( echo $NUMJOBS | sed 's?-j??g' )
MAXJOBS=$JOBS
export JOBS MAXJOBS
if [ -z "$MAXJOBS" ]; then  # We're not using distcc, so NUMJOBS has not been set.
   MAXJOBS=2
fi
make -j $MAXJOBS || make || failmake

# Create some package framework:
mkdir -p \
         $PKG/usr/doc/samba-$VERSION \
         $PKG/var/spool/samba \
         $PKG/var/log/samba \
         $PKG/var/lib/samba/private \
         $PKG/var/cache/samba

# Install:
make install DESTDIR=$PKG || exit 1

# Install the smbprint script:
install -m0744 packaging/printing/smbprint $PKG/usr/bin/smbprint

# Add a sample config file:
cat $CWD/smb.conf.default > $PKG/etc/samba/smb.conf-sample

# Setup a default lmhosts file:
echo "127.0.0.1        localhost" > $PKG/etc/samba/lmhosts.new

if [ ! -r $PKG/usr/bin/smbget ]; then
  rm -f $PKG/usr/share/man/man1/smbget.1
fi

# We'll add rc.samba to the init directory, but chmod 644 so that it doesn't
# start by default:
mkdir -p $PKG/etc/rc.d
cat $CWD/rc.samba > $PKG/etc/rc.d/rc.samba.new
chmod 644 $PKG/etc/rc.d/rc.samba.new

# PAM related stuff we don't use:
rm -r $PKG/usr/share/locale
rm -f $PKG/usr/man/man8/pam*

mv $PKG/usr/share/man $PKG/usr
cp -a \
  COPYING* MAINTAINERS Manifest PFIF.txt README* \
  Read-Manifest-Now Roadmap WHATSNEW.txt docs examples \
  $PKG/usr/doc/samba-$VERSION
# These are installed elsewhere:
rm -rf $PKG/usr/doc/samba-$VERSION/docs/htmldocs \
       $PKG/usr/doc/samba-$VERSION/docs/manpages
# Empty now?
rmdir $PKG/usr/doc/samba-$VERSION/docs 2> /dev/null

# I'm sorry, but when all this info is included in HTML, adding 7MB worth of
# PDF files just to have extra artwork is more fluff than I'll agree to.
rm -f $PKG/usr/doc/samba-$VERSION/docs/*.pdf
# Also redundant also:
rm -rf $PKG/usr/doc/samba-$VERSION/docs/docbook

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh

# Finally ensure permissions, which may have got broken by the 'slackslack'
# above:
chmod 700  var/lib/samba/private
chmod 755  var/cache/samba/
chmod 755  var/log/samba/
chmod 1777 var/spool/samba/

slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
