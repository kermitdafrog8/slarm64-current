#!/bin/bash

# arm/build
# Check package dependencies, set metadata and launch
# package build script.
# by Stuart Winter
#
source /usr/share/slackdev/buildkit.sh

# Package metadata:
export PKGNAM=seamonkey
export VERSION=${VERSION:-2.48}
export BUILD=${BUILD:-1}
export PKGSERIES=${PKGSERIES:-xap}
export SLACKPACKAGE=$PKGNAM-$VERSION-$PKGARCH-$BUILD.txz

## ******************************************************************* ##
# For test packages - best to store in another location rather than
# overwriting the working copy in the main tree:
# export PKGSTORE=/tmp/
# mkdir -vpm755 $PKGSTORE/{xap,l}
## ******************************************************************* ##

# Ensure base ARM packages are installed first:
slackbasedeps

# Ensure $PKGNAM isn't already installed:
slackfailpkgdeps $PKGNAM || removepkg $PKGNAM
# + the accompanying package:
removepkg seamonkey-solibs

# autoconf 2.13 is needed.  Slackware ARM has the older version in the
# extra/autoconf213 directory.
# You need to upgradepkg to this version before building seamonkey.  Once built
# you can return to the newer version in the slackware/d/ series.
#
#autoconf --version | fgrep 2.13 >/dev/null || { echo "autoconf 2.13 needed. upgradepkg to the version in extra/autoconf213" ; exit 1 ;}
upgradepkg --install-new $PKGSTORE/../extra/autoconf213/autoconf*t?z

# and gcc 4.6.2 as well
#gcc --version|head -n1|awk '{print $3}' | fgrep 4.6.2 >/dev/null || { echo "gcc 4.6.2 required" ; exit 1 ;}
#

# Ensure specific build dependencies (mainly libraries):
{ slackcheckpkgdeps dbus            || installpkg $PKGSTORE/a/dbus-[0-9]*.t?z    || exit 99; }
{ slackcheckpkgdeps alsa-lib        || installpkg $PKGSTORE/l/alsa-lib-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps atk             || installpkg $PKGSTORE/l/atk-[0-9]*.t?z     || exit 99; }
{ slackcheckpkgdeps cairo           || installpkg $PKGSTORE/l/cairo-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps dbus-glib       || installpkg $PKGSTORE/l/dbus-glib-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps freetype        || installpkg $PKGSTORE/l/freetype-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps gdk-pixbuf2     || installpkg $PKGSTORE/l/gdk-pixbuf2-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps glib2           || installpkg $PKGSTORE/l/glib2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps gtk+2           || installpkg $PKGSTORE/l/gtk+2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps gtk+3           || installpkg $PKGSTORE/l/gtk+3-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps mozilla-nss     || installpkg $PKGSTORE/l/mozilla-nss-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps pango           || installpkg $PKGSTORE/l/pango-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps startup-notification || installpkg $PKGSTORE/l/startup-notification-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps fontconfig      || installpkg $PKGSTORE/x/fontconfig-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libX11          || installpkg $PKGSTORE/x/libX11-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libXcomposite   || installpkg $PKGSTORE/x/libXcomposite-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXdamage      || installpkg $PKGSTORE/x/libXdamage-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXext         || installpkg $PKGSTORE/x/libXext-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXfixes       || installpkg $PKGSTORE/x/libXfixes-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXrender      || installpkg $PKGSTORE/x/libXrender-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXt           || installpkg $PKGSTORE/x/libXt-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps libxcb          || installpkg $PKGSTORE/x/libxcb-[0-9]*.t?z  || exit 99; }

# Let's build only against mozilla-nss rather than anything else in the mozilla packages:
removepkg mozilla-firefox mozilla-thunderbird
{ slackcheckpkgdeps mozilla-nss || installpkg $PKGSTORE/l/mozilla-nss-[0-9]*.t?z || exit 99 ; }

#{ slackcheckpkgdeps mozilla-firefox     || installpkg $PKGSTORE/xap/mozilla-firefox-*.t?z || exit 99 ; }
#{ slackcheckpkgdeps mozilla-thunderbird || installpkg $PKGSTORE/xap/mozilla-thunderbird-*.t?z || exit 99 ; }

# Launch the package build script:
BUILDLOG=$( basename $SLACKPACKAGE .t?z ).build.log
( ./$PKGNAM.SlackBuild ) >& /dev/stdout | tee $BUILDLOG

# Compress the build log:
bzip2 -9fvz $BUILDLOG

# Switch back to the normal autoconf:
#removepkg autoconf
#{ slackcheckpkgdeps autoconf || installpkg $PKGSTORE/d/autoconf-[0-9]*.t?z || exit 99; }
