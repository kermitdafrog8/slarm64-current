#!/bin/bash

# seyon.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for ARMedslack.
#
# Copyright 2002-2012  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xvvf $CWD/$PKGNAM-$VERSION.tar.gz
cd $PKGNAM-$VERSION || exit 1
slackhousekeeping

# Apply patches:
tar xvvf $PORTCWD/sources/*debian*
rm -f debian/patches/series
for i in debian/patches/* ; do
  auto_apply_patch $i || exit 1
done

# Build:
chmod 755 makever.sh
xmkmf
make $NUMJOBS || make || exit 1

# Install into package framework:
mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/X11
make install DESTDIR=$PKG LIBDIR=/usr/lib${LIBDIRSUFFIX}/X11 || exit 1
mkdir -p $PKG/etc/X11/seyon
touch $PKG/etc/X11/seyon/Seyon-modem.new
mkdir -p $PKG/etc/X11/app-defaults
cp Seyon-co.ad $PKG/etc/X11/app-defaults/Seyon-color.new
cp Seyon.ad $PKG/etc/X11/app-defaults/Seyon.new
mkdir -p $PKG/usr/doc/seyon-$VERSION/.seyon
cp -a \
  1-* COPYING $PKG/usr/doc/seyon-$VERSION
cp -a \
  phonelist protocols script.CIS script.PCBoard script.QWK script.unix startup \
  $PKG/usr/doc/seyon-$VERSION/.seyon
find $PKG/usr/doc/seyon-$VERSION -type f -exec chmod 644 {} \;
find $PKG/usr/doc/seyon-$VERSION -type d -exec chmod 755 {} \;
( cd $PKG/usr/doc/seyon-$VERSION ; ln -sf .seyon HOME.seyon.directory.example )

mkdir -p $PKG/usr/man/man1
cat seyon.man | gzip -9c > $PKG/usr/man/man1/seyon.1.gz

mkdir -p $PKG/install
cat << EOF > $PKG/install/doinst.sh
#!/bin/sh
config() {
  NEW="\$1"
  OLD="\$(dirname \$NEW)/\$(basename \$NEW .new)"
  # If there's no config file by that name, mv it over:
  if [ ! -r \$OLD ]; then
    mv \$NEW \$OLD
  elif [ "\$(cat \$OLD | md5sum)" = "\$(cat \$NEW | md5sum)" ]; then # toss the redundant copy
    rm \$NEW
  fi
  # Otherwise, we leave the .new copy for the admin to consider...
}
config etc/X11/seyon/Seyon-modem.new
config etc/X11/app-defaults/Seyon.new
config etc/X11/app-defaults/Seyon-color.new

EOF

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
