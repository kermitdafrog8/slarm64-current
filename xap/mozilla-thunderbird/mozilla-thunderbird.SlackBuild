#!/bin/bash

# mozilla-thunderbird.SlackBuild
# by Stuart Winter <mozes@slackware.com>
# 26-Apr-2005
#
# Copyright 2008, 2009, 2010, 2011, 2012, 2014, 2016, 2017  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

RELEASEVER=$(echo $VERSION | cut -f 1 -d e | cut -f 1 -d b)
echo "Release version: $RELEASEVER"

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Determine the CFLAGS for the known architectures:
case $ARCH in
   arm)     export SLKCFLAGS="$SLKCFLAGS -g -fstack-protector --param=ssp-buffer-size=4 -Wall -O2 -fno-schedule-insns"
#            export SLKCXXFLAGS="-g -std=gnu++0x"
            export SLKCXXFLAGS="$SLKCFLAGS"
            export LDFLAGS="-Wl,--no-as-needed -Wl,--no-keep-memory -Wl,--reduce-memory-overheads"

            # The little hacks section:
            # Firefox 17.0 adds webrtc but it does not work on ARM
            SLKCONFARGS="--disable-webrtc"
            #
            # --with-system-libvpx=/tmp/pkg-libvpx
            export SLKCONFARGS="$SLKCONFARGS \
                                --with-float-abi=hard \
                                --enable-extensions=default \
                                --disable-tests \
                                --disable-crashreporter \
                                --disable-elf-hack \
                                --enable-system-ffi \
                                --host=${SLK_ARCH_BUILDTARGET} \
                                --target=${SLK_ARCH_BUILDTARGET}"
            export LIBDIRSUFFIX="" ;;
   *)       export SLKCFLAGS="-O" ;;
esac

# For aarch64, add --disable-ion

# Figure out if this is a beta, or a release:
MOZLOCALIZE=${MOZLOCALIZE:-}

# Extract source:
echo "[**] Extracting source [**]"
tar xf $CWD/thunderbird-*source.tar.?z*
#tar xf $PORTCWD/sources/thunderbird-*source.tar.bz2
cd thunderbird* || exit 1
slackhousekeeping

# Work-around:
sed -i 's?-Werror?-Wall?g' configure

# ARM fixes from Debian:
tar xvvf $PORTCWD/sources/icedove*z
for pf in \
  fixes/Bug-628252-os2.cc-fails-to-compile-against-GCC-4.6-m.patch \
  porting/Add-xptcall-support-for-SH4-processors.patch \
  ; do
  auto_apply_patch debian/patches/$pf || exit 1
done

# Apply some patches from Fedora:
ln -vfs mozilla mozilla-release # just a hack to avoid editing the patches
pushd mozilla
patch -p1 < $PORTCWD/sources/fedorapatches/firefox-gcc-6.0.patch || exit 1
popd
patch -p1 < $PORTCWD/sources/fedorapatches/mozilla-build-arm.patch || exit 1

# Retain GTK+ v2 scrolling behavior:
zcat $CWD/tb.ui.scrollToClick.diff.gz | patch -p1 --verbose || exit 1

# Use the 'gold' ld linker due to RAM issues:
mkdir -vpm755 $TMPBUILD/gold
ln -vfs /usr/bin/ld.gold $TMPBUILD/gold/ld
export PATH=$TMPBUILD/gold:$PATH

# Configure options:
OPTIONS=" $SLKCONFARGS \
   --enable-official-branding \
   --prefix=/usr \
   --libdir=/usr/lib${LIBDIRSUFFIX} \
   --with-default-mozilla-five-home=/usr/lib${LIBDIRSUFFIX}/thunderbird-$RELEASEVER \
   --with-system-zlib \
   --enable-alsa \
   --enable-application=mail \
   --enable-calendar \
   --enable-default-toolkit=cairo-gtk3 \
   --enable-startup-notification \
   --enable-ldap \
   --enable-strip \
   --enable-cpp-rtti \
   --disable-accessibility \
   --disable-debug \
   --disable-tests \
   --host=${SLK_ARCH_BUILDTARGET} \
   --target=${SLK_ARCH_BUILDTARGET}"

if [ ! -z $MOZLOCALIZE ]; then
  OPTIONS=$OPTIONS" \
  --enable-ui-locale=$MOZLOCALIZE
  --with-l10n-base=.."
  # There are no dictionaries in localized builds
  sed -i \
    -e "/@BINPATH@\/dictionaries\/\*/d" \
    -e "/@RESPATH@\/dictionaries\/\*/d" \
    mail/installer/package-manifest.in || exit 1
fi

# Broken with thunderbird 12.0:
#  --enable-system-cairo \

# ARM: Reduce parallel build jobs since the build host gets hammered:
if [ ! -z "$NUMJOBS" ]; then
   export NUMJOBS="-j3"
 else
   export NUMJOBS="-j1"
fi

# Build thunderbird:
echo "[**] Building thunderbird [**]"
#find . -name configure.in | while read line ; do touch ${line%.*}; done
#find . -name configure.in | while read line ; do touch ${line%%configure.in}/config.status; done
export BUILD_OFFICIAL=1
export MOZILLA_OFFICIAL=1
export MOZ_PHOENIX=1
export MOZ_MAKE_FLAGS="$NUMJOBS"
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"

# Clear some variables that could break the build
unset DBUS_SESSION_BUS_ADDRESS ORBIT_SOCKETDIR SESSION_MANAGER \
  XDG_SESSION_COOKIE XAUTHORITY MAKEFLAGS

# Assemble our .mozconfig:
echo > .mozconfig

# Mozilla devs enforce using an objdir for building
# https://developer.mozilla.org/en/Configuring_Build_Options#Building_with_an_objdir
mkdir obj
echo "mk_add_options MOZ_OBJDIR=$(pwd)/obj" >> .mozconfig
# This directory is also needed or the build will fail:
mkdir -p mozilla/obj

# Write in it the options above
for option in $OPTIONS; do echo "ac_add_options $option" >> .mozconfig; done

make -f client.mk build || exit 1
make -f client.mk install DESTDIR=$PKG || exit 1

# We don't need these (just symlinks anyway):
rm -rf $PKG/usr/lib${LIBDIRSUFFIX}/thunderbird-devel-$RELEASEVER

# Nor these:
rm -rf $PKG/usr/include

#  Thunderbird 3.x cruft?
#( cd $PKG/usr/lib${LIBDIRSUFFIX}/thunderbird-$VERSION
#  cp -a defaults/profile/mimeTypes.rdf defaults/profile/mimeTypes.rdf.orig
#  zcat $CWD/mimeTypes.rdf > defaults/profile/mimeTypes.rdf || exit 1
#) || exit 1

mkdir -p $PKG/usr/lib${LIBDIRSUFFIX}/mozilla/plugins
mkdir -p $PKG/usr/share/applications
cat $CWD/mozilla-thunderbird.desktop > $PKG/usr/share/applications/mozilla-thunderbird.desktop
mkdir -p $PKG/usr/share/pixmaps
cat $CWD/thunderbird.png > $PKG/usr/share/pixmaps/thunderbird.png

# These files/directories are usually created if Thunderbird is run as root,
# which on many systems might (and possibly should) be never.  Therefore, if we
# don't see them we'll put stubs in place to prevent startup errors.
( cd $PKG/usr/lib${LIBDIRSUFFIX}/thunderbird-$RELEASEVER
  if [ -d extensions/talkback\@mozilla.org ]; then
    if [ ! -r extensions/talkback\@mozilla.org/chrome.manifest ]; then
      echo > extensions/talkback\@mozilla.org/chrome.manifest
    fi
  fi
  if [ ! -d updates ]; then
    mkdir -p updates/0
  fi
)

# Need some default icons in the right place:
for i in 16 22 24 32 48 256; do
  install -m 0644 -D other-licenses/branding/thunderbird/mailicon${i}.png \
    $PKG/usr/share/icons/hicolor/${i}x${i}/apps/thunderbird.png
done
mkdir -p $PKG/usr/share/pixmaps
( cd $PKG/usr/share/pixmaps ; ln -sf /usr/share/icons/hicolor/256x256/apps/thunderbird . )
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/thunderbird-$RELEASEVER/chrome/icons/default
install -m 644 other-licenses/branding/thunderbird/mailicon16.png \
  $PKG/usr/lib$LIBDIRSUFFIX/thunderbird-$RELEASEVER/icons/
install -m 644 other-licenses/branding/thunderbird/mailicon16.png \
  $PKG/usr/lib$LIBDIRSUFFIX/thunderbird-$RELEASEVER/chrome/icons/default/

# Copy over the LICENSE
install -p -c -m 644 LICENSE $PKG/usr/lib${LIBDIRSUFFIX}/thunderbird-$RELEASEVER/

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh

# Change the architecture of the package name since Thunderbird 3.1
# doesn't support armv4:
# Debian re-added support in Thunderbird5.
# The 'hfp' name means that it's 'hardware floating point':
#export SLACKPACKAGE=$PKGNAM-$VERSION-arm-$BUILD.txz

slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links

# Clean up the residue for this hack:
rm -rf /tmp/pkg-libvpx
