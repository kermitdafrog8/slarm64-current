#!/bin/bash

# arm/build
# Check package dependencies, set metadata and launch
# package build script.
# by Stuart Winter <mozes@slackware.com>
#
source /usr/share/slackdev/buildkit.sh

# Package metadata:
export PKGNAM=MPlayer
export VERSION=${VERSION:-20170208}
export BUILD=${BUILD:-4}
#export BUILD=${BUILD:-1_slack14.1}
export PKGSERIES=${PKGSERIES:-xap}
export SLACKPACKAGE=$PKGNAM-$VERSION-$PKGARCH-$BUILD.txz

## ******************************************************************* ##
# For test packages - best to store in another location rather than
# overwriting the working copy in the main tree:
# export PKGSTORE=/tmp/
# mkdir -vpm755 $PKGSTORE/$PKGSERIES
## ******************************************************************* ##

# Reset the ARM file system: restore it to the 'factory settings'
# as it were (this has no effect when building natively):
sboxsysrestore

# Ensure base ARM packages are installed first:
slackbasedeps

# Ensure $PKGNAM isn't already installed:
slackfailpkgdeps $PKGNAM || removepkg $PKGNAM

# We need to make sure this is built on an ARMv5te machine to avoid building
# MPlayer for higher spec machines:
# (although really? Not sure about this)
#[ $( uname -m ) = "armv7l" ] && { echo "**** Must build on an ARMv5 machine****" ; exit 1 ;}

# Ensure specific build dependencies (mainly libraries):
{ slackcheckpkgdeps bzip2           || installpkg $PKGSTORE/a/bzip2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps mpg123          || installpkg $PKGSTORE/ap/mpg123-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps a52dec          || installpkg $PKGSTORE/l/a52dec-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps aalib           || installpkg $PKGSTORE/l/aalib-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps alsa-lib        || installpkg $PKGSTORE/l/alsa-lib-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps atk             || installpkg $PKGSTORE/l/atk-[0-9]*.t?z     || exit 99; }
{ slackcheckpkgdeps cairo           || installpkg $PKGSTORE/l/cairo-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps esound          || installpkg $PKGSTORE/l/esound-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps ffmpeg          || installpkg $PKGSTORE/l/ffmpeg-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps freetype        || installpkg $PKGSTORE/l/freetype-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps fribidi         || installpkg $PKGSTORE/l/fribidi-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps gdk-pixbuf2     || installpkg $PKGSTORE/l/gdk-pixbuf2-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps giflib          || installpkg $PKGSTORE/l/giflib-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps glib2           || installpkg $PKGSTORE/l/glib2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps gtk+2           || installpkg $PKGSTORE/l/gtk+2-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps libcaca         || installpkg $PKGSTORE/l/libcaca-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libcdio         || installpkg $PKGSTORE/l/libcdio-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libcdio-paranoia || installpkg $PKGSTORE/l/libcdio-paranoia-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libdvdnav       || installpkg $PKGSTORE/l/libdvdnav-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libdvdread      || installpkg $PKGSTORE/l/libdvdread-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libjpeg-turbo   || installpkg $PKGSTORE/l/libjpeg-turbo-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libmad          || installpkg $PKGSTORE/l/libmad-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libmng          || installpkg $PKGSTORE/l/libmng-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libogg          || installpkg $PKGSTORE/l/libogg-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libpng          || installpkg $PKGSTORE/l/libpng-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libtheora       || installpkg $PKGSTORE/l/libtheora-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libvorbis       || installpkg $PKGSTORE/l/libvorbis-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps lzo             || installpkg $PKGSTORE/l/lzo-[0-9]*.t?z     || exit 99; }
{ slackcheckpkgdeps ncurses         || installpkg $PKGSTORE/l/ncurses-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps pango           || installpkg $PKGSTORE/l/pango-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps pulseaudio      || installpkg $PKGSTORE/l/pulseaudio-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps sdl             || installpkg $PKGSTORE/l/sdl-[0-9]*.t?z     || exit 99; }
{ slackcheckpkgdeps svgalib         || installpkg $PKGSTORE/l/svgalib-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps gnutls          || installpkg $PKGSTORE/n/gnutls-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps samba           || installpkg $PKGSTORE/n/samba-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps fontconfig      || installpkg $PKGSTORE/x/fontconfig-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libX11          || installpkg $PKGSTORE/x/libX11-[0-9]*.t?z  || exit 99; }
{ slackcheckpkgdeps libXScrnSaver   || installpkg $PKGSTORE/x/libXScrnSaver-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXext         || installpkg $PKGSTORE/x/libXext-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXinerama     || installpkg $PKGSTORE/x/libXinerama-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXv           || installpkg $PKGSTORE/x/libXv-[0-9]*.t?z   || exit 99; }
{ slackcheckpkgdeps libXxf86dga     || installpkg $PKGSTORE/x/libXxf86dga-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libXxf86vm      || installpkg $PKGSTORE/x/libXxf86vm-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps libvdpau        || installpkg $PKGSTORE/x/libvdpau-[0-9]*.t?z || exit 99; }
{ slackcheckpkgdeps mesa            || installpkg $PKGSTORE/x/mesa-[0-9]*.t?z    || exit 99; }

# Launch the package build script:
BUILDLOG=$( basename $SLACKPACKAGE .t?z ).build.log
( ./$PKGNAM.SlackBuild ) >& /dev/stdout | tee $BUILDLOG

# Compress the build log:
bzip2 -9fvz $BUILDLOG
