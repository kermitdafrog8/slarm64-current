#!/bin/bash

# vulkan-sdk.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter for Slackware ARM.
#
# Copyright 2016  Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2016  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Extract source:
tar xvvf $CWD/Vulkan-LoaderAndValidationLayers-sdk-$VERSION*?z*
cd Vulkan* || exit 1
slackhousekeeping

GLSLANG_VERSION=$(cat glslang_revision | head -n 1)
SPIRV_HEADERS_VERSION=$(cat spirv-headers_revision | head -n 1)
SPIRV_TOOLS_VERSION=$(cat spirv-tools_revision | head -n 1)

mkdir external

cd external
  tar xvf $CWD/glslang-${GLSLANG_VERSION}.tar.?z*
  mv glslang-${GLSLANG_VERSION} glslang
  tar xvf $CWD/SPIRV-Tools-${SPIRV_TOOLS_VERSION}.tar.?z*
  mv SPIRV-Tools-${SPIRV_TOOLS_VERSION} spirv-tools
cd -

cd external/spirv-tools/external
  tar xvf $CWD/SPIRV-Headers-${SPIRV_HEADERS_VERSION}.tar.?z*
  mv SPIRV-Headers-${SPIRV_HEADERS_VERSION} spirv-headers
cd -

mkdir -p external/{glslang,spirv-tools}/build
mkdir -p build
mkdir -p demos/build

# Fix LIBDIRSUFFIX
for i in $(find external -name CMakeLists.txt); do
  sed -i "s|DESTINATION lib|DESTINATION lib\${LIB_SUFFIX}|" "$i"
done

# Configure:
cd external/glslang/build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    ..

  make $NUMJOBS VERBOSE=1 || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd -

cd external/spirv-tools/build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    -DCMAKE_BUILD_TYPE=Release \
    ..

  make $NUMJOBS VERBOSE=1 || make || exit 1
  make install DESTDIR=$PKG || exit 1
cd -

# python 2.7 is fine, unless we want to build the demos
sed -i "s|\<python3\>|python|" *.py */*.py CMakeLists.txt
sed -i "s|PythonInterp 3|PythonInterp 2|" CMakeLists.txt

cd build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_SYSCONFDIR=/etc \
    -DCMAKE_INSTALL_DATADIR=/share \
    -DCMAKE_SKIP_RPATH=True \
    -DBUILD_TESTS=Off \
    -DBUILD_DEMOS=Off \
    -DBUILD_WSI_XLIB_SUPPORT=On \
    -DCMAKE_BUILD_TYPE=Release \
    -DGLSLANG_LIB=../external/glslang/build/glslang/libglslang.a \
    -DGLSLANG_VALIDATOR=../external/glslang/build/StandAlone/glslangValidator \
    -DHLSL_LIB=../external/glslang/build/hlsl/libHLSL.a \
    -DOGLCompiler_LIB=../external/glslang/build/OGLCompilersDLL/libOGLCompiler.a \
    -DOSDependent_LIB=../external/glslang/build/glslang/OSDependent/Unix/libOSDependent.a \
    -DSPIRV_LIB=../external/glslang/build/SPIRV/libSPIRV.a \
    -DSPIRV_REMAPPER_LIB=../external/glslang/build/SPIRV/libSPVRemapper.a \
    ..

  make $NUMJOBS VERBOSE=1 || make || exit 1
cd -

cd demos/build
  cmake \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS -I../../include/" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS -I../../include/" \
    -DCMAKE_EXE_LINKER_FLAGS="-L../../build/loader/" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_SYSCONFDIR=/etc \
    -DCMAKE_INSTALL_DATADIR=/share \
    ..

  make $NUMJOBS VERBOSE=1 vulkaninfo || make vulkaninfo || exit 1
cd -

# Manual install...

mkdir -p $PKG/usr/{bin,lib$LIBDIRSUFFIX,include/vulkan,include/spirv}
mkdir -p $PKG/usr/share/vulkan/{explicit,implicit}_layer.d
mkdir -p $PKG/etc/vulkan/icd.d/

install -m 0644 include/vulkan/* $PKG/usr/include/vulkan/
for i in spirv.h spirv.hpp spirv.hpp11; do
  install -m 0644 external/spirv-tools/external/spirv-headers/include/spirv/1.1/$i \
    $PKG/usr/include/spirv/
done

cp -rv  build/loader/libvulkan.so* $PKG/usr/lib$LIBDIRSUFFIX/
install -m 0644 build/layers/*.so $PKG/usr/lib$LIBDIRSUFFIX/

install -m 0755 demos/build/vulkaninfo $PKG/usr/bin/

# fix library paths
for i in layers/linux/*.json ; do
  sed 's@./@@' $i > $PKG/usr/share/vulkan/explicit_layer.d/$(basename $i)
done

# Add documentation:
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a *.md LICENSE.txt loader/LoaderAndLayerInterface.md \
  $PKG/usr/doc/$PKGNAM-$VERSION
#changelogliposuction ChangeLog $PKGNAM $VERSION # Trim down a "ChangeLog" file

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # set standard Slackware file/dir permissions and ownerships
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
