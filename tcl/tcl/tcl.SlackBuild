#!/bin/bash

# tcl.SlackBuild
# Heavily based on the original Slackware build scripts,
# Modified by Stuart Winter <mozes@slackware.com>
#
# Copyright 2008, 2009, 2012, 2013, 2016  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Record toolchain & other info for the build log:
slackbuildinfo

# Paths to skeleton port's source & real Slackware source tree:
export CWD=$SLACKSOURCE/$PKGSERIES/$PKGNAM
export PORTCWD=$PWD

# Temporary build locations:
export TMPBUILD=$TMP/build-$PKGNAM
export PKG=$TMP/package-$PKGNAM
mkpkgdirs # Delete & re-create temporary directories then cd into $TMPBUILD

# Determine the CFLAGS for the known architectures:
case $ARCH in
   arm|aarch64) export SLKCFLAGS="$SLKCFLAGS -DHAVE_USLEEP=1"
esac

# Extract source:
tar xvvf $CWD/tcl$VERSION-src.tar.?z*
cd tcl$VERSION || exit 1
slackhousekeeping

# Copy docs:
mkdir -p $PKG/usr/doc/${PKGNAM}${VERSION}
cp -a README* license.terms $PKG/usr/doc/tcl$VERSION

# Fix 64bit path names:
sed -i -e "s#TCL_LIBRARY='\$(prefix)/lib/tcl\$(VERSION)'#TCL_LIBRARY='\$(prefix)/lib$LIBDIRSUFFIX/tcl\$(VERSION)'#" configure

# Build static version:
cd unix
CFLAGS="$SLKCFLAGS" \
./configure \
   --prefix=/usr \
   --libdir=/usr/lib${LIBDIRSUFFIX} \
   --enable-shared \
   --enable-threads \
   --mandir=/usr/man \
   --enable-man-symlinks \
   --build=${SLK_ARCH_BUILDTARGET} || failconfig
make $NUMJOBS || make || failmake

# Fix paths in tclConfig.sh:
 sed -e "s@^\(TCL_SRC_DIR='\).*@\1/usr/include'@" \
     -e "/TCL_B/s@='\(-L\)\?.*unix@='\1/usr/lib${LIBDIRSUFFIX}@" \
     -i tclConfig.sh

# Install in to package:
make install DESTDIR=$PKG || exit 1

# Some sources require Tcl's private headers, which might not be the
# best thing but we'll include them where we've seen other teams
# doing the same thing:
make install-private-headers DESTDIR=$PKG || exit 1

# Make symlinks:
( cd $PKG/usr/bin
  rm -f tclsh
  ln -sf tclsh8.6 tclsh
)
( cd $PKG/usr/lib
  rm -f libtcl.so
  ln -sf libtcl8.6.so libtcl.so
)

# If necessary, start the fakeroot server so we can set file/dir ownerships:
start_fakeroot

# Archive source -- it's needed to build tix and expect:
( cd $TMPBUILD
  tar -Ixz -pcf $PORTCWD/sources/tcl-compiled.tar.xz tcl* )

# Apply generic Slackware packaging policies:
cd $PKG
slackstripall   # strip all .a archives and all ELFs
slackgzpages -i # compress man & info pages and delete usr/info/dir
slackslack      # chown -R root:root, chmod -R og-w, slackchown, slack644docs
slackdesc       # install slack-desc and doinst.sh
slackmp         # run makepkg -l y -c n

# Perform any final checks on the package:
cd $PKG
slackhlinks     # search for any hard links
